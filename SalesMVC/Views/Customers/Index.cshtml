@model IEnumerable<SalesMVC.Models.Customer>

@{
    ViewData["Title"] = "Customers";
}

<h1>Customer List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead> @*heading body*@
        <tr> @*represents headings, just like textfiles*@
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>@*represents one columns*@
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StateCode)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody> @*body that fills the column headings*@
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id) @*displayfor gets the data, doesnt care about the name unlike displaynamefor*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @item.Sales.ToString("C")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StateCode)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                <a asp-action="Orders" asp-route-id="@item.Id">Orders</a>
            </td>
        </tr>
}
    </tbody>
</table>
